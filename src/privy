#!/usr/bin/python3

import argparse
import socket
import sys, select
import signal

port = 49201

def send(s, msg):
    try:
        s.send(msg.encode())
    except:
        return

def receive(s):
    try:
        data = s.recv(1024)
    except:
        return
    if not data:
        return
    print (">", data.decode())

def setup_socket():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    return s

def config_client_socket(s, TCP_PORT):
    s.connect((ip, TCP_PORT))

def config_server_socket(s, TCP_PORT):
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    s.bind(('127.0.0.1', TCP_PORT))
    s.listen(1)
    s, ip = s.accept()
    return s

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', help='act as the server', action='store_true')
    parser.add_argument('ip', nargs='?', help='ip to send message to')

    args = parser.parse_args()

    s = setup_socket()

    def signal_handler(signal, frame):
        s.close()
        sys.exit(0)

    signal.signal(signal.SIGINT, signal_handler)

    TCP_PORT = 21131
    if args.d:
        s = config_server_socket(s, TCP_PORT)
    else:
        ip = args.ip
        if not ip:
            parser.print_help()
            sys.exit(0)
        config_client_socket(s, TCP_PORT)

    print('connection established')
    s.setblocking(0)

    sendStr = ''
    while 1:
        i, o, e = select.select( [sys.stdin], [], [], 0.1 )
        if i:
            newStr = sys.stdin.readline().strip()
            sendStr = sendStr + newStr
            send(s, sendStr)
            sendStr = ''
        receive(s)

